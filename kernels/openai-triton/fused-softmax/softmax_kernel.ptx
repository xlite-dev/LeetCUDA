//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	softmax_kernel          // -- Begin function softmax_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @softmax_kernel
.visible .entry softmax_kernel(
	.param .u64 .ptr .global .align 1 softmax_kernel_param_0,
	.param .u64 .ptr .global .align 1 softmax_kernel_param_1,
	.param .u32 softmax_kernel_param_2,
	.param .u32 softmax_kernel_param_3,
	.param .u32 softmax_kernel_param_4,
	.param .u32 softmax_kernel_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<132>;
	.reg .f32 	%f<62>;
	.reg .b64 	%rd<24>;
	.loc	1 34 0                          // triton_fused_softmax.py:34:0
$L__func_begin0:
	.loc	1 34 0                          // triton_fused_softmax.py:34:0

// %bb.0:
	ld.param.u32 	%r30, [softmax_kernel_param_5];
	ld.param.u32 	%r29, [softmax_kernel_param_4];
	ld.param.u32 	%r27, [softmax_kernel_param_2];
	ld.param.u64 	%rd3, [softmax_kernel_param_1];
$L__tmp0:
	.loc	1 42 30                         // triton_fused_softmax.py:42:30
	// begin inline asm
	mov.u32 %r131, %ctaid.x;
	// end inline asm
	.loc	1 49 35                         // triton_fused_softmax.py:49:35
	mov.u32 	%r3, %tid.x;
	and.b32  	%r41, %r3, 255;
	or.b32  	%r4, %r41, 256;
	or.b32  	%r5, %r41, 512;
	or.b32  	%r6, %r41, 768;
	.loc	1 52 29                         // triton_fused_softmax.py:52:29
	setp.lt.s32 	%p6, %r41, %r30;
	setp.lt.s32 	%p7, %r4, %r30;
	setp.lt.s32 	%p8, %r5, %r30;
	setp.lt.s32 	%p9, %r6, %r30;
	.loc	1 44 57                         // triton_fused_softmax.py:44:57
	setp.ge.s32 	%p10, %r131, %r29;
	setp.lt.s32 	%p11, %r131, %r29;
	.loc	1 46 46                         // triton_fused_softmax.py:46:46
	mul.lo.s32 	%r42, %r131, %r27;
	.loc	1 46 36                         // triton_fused_softmax.py:46:36
	mul.wide.s32 	%rd8, %r42, 4;
	add.s64 	%rd9, %rd3, %rd8;
	.loc	1 50 37                         // triton_fused_softmax.py:50:37
	mul.wide.u32 	%rd10, %r41, 4;
	add.s64 	%rd4, %rd9, %rd10;
	add.s64 	%rd5, %rd4, 1024;
	add.s64 	%rd6, %rd4, 2048;
	add.s64 	%rd7, %rd4, 3072;
	.loc	1 53 22                         // triton_fused_softmax.py:53:22
	shl.b32 	%r43, %r41, 2;
	mov.u32 	%r44, global_smem;
	add.s32 	%r82, %r44, %r43;
	add.s32 	%r84, %r82, 1024;
	add.s32 	%r86, %r82, 2048;
	add.s32 	%r88, %r82, 3072;
	selp.b32 	%r45, 4, 0, %p11;
	selp.b32 	%r34, %r45, 0, %p6;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r82 + 0 ], [ %rd4 + 0 ], 0x4, %r34;
	// end inline asm
	selp.b32 	%r36, %r45, 0, %p7;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r84 + 0 ], [ %rd5 + 0 ], 0x4, %r36;
	// end inline asm
	selp.b32 	%r38, %r45, 0, %p8;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r86 + 0 ], [ %rd6 + 0 ], 0x4, %r38;
	// end inline asm
	selp.b32 	%r40, %r45, 0, %p9;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r88 + 0 ], [ %rd7 + 0 ], 0x4, %r40;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 44 57                         // triton_fused_softmax.py:44:57
	@%p10 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 57                          // triton_fused_softmax.py:0:57
	ld.param.u32 	%r28, [softmax_kernel_param_3];
	ld.param.u64 	%rd2, [softmax_kernel_param_0];
	// begin inline asm
	mov.u32 %r32, %nctaid.x;
	// end inline asm
	cvt.u64.u32 	%rd1, %r41;
	.loc	1 49 35                         // triton_fused_softmax.py:49:35
	and.b32  	%r11, %r3, 31;
	sub.s32 	%r12, %r29, %r32;
	add.s32 	%r48, %r44, 4096;
	shr.u32 	%r49, %r3, 3;
	and.b32  	%r50, %r49, 28;
	add.s32 	%r54, %r48, %r50;
	setp.lt.s32 	%p15, %r3, 8;
	shl.b32 	%r51, %r3, 2;
	add.s32 	%r57, %r48, %r51;
	and.b32  	%r52, %r3, 7;
	setp.eq.s32 	%p13, %r52, 0;
	and.pred  	%p16, %p15, %p13;
	.loc	1 44 57                         // triton_fused_softmax.py:44:57
	add.s32 	%r53, %r131, %r32;
	mul.lo.s32 	%r129, %r27, %r53;
	mul.lo.s32 	%r16, %r32, %r27;
	mul.lo.s32 	%r128, %r131, %r28;
	mul.lo.s32 	%r18, %r32, %r28;
	mov.b32 	%r130, -1;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 57                          // triton_fused_softmax.py:0:57
	cvt.u32.u64 	%r90, %rd1;
	setp.eq.s32 	%p14, %r11, 0;
	.loc	1 52 29                         // triton_fused_softmax.py:52:29
	setp.lt.s32 	%p20, %r90, %r30;
	.loc	1 44 57                         // triton_fused_softmax.py:44:57
	setp.lt.s32 	%p28, %r131, %r12;
	add.s32 	%r91, %r130, 1;
	setp.gt.u32 	%p29, %r130, 2147483646;
	selp.b32 	%r130, %r91, 0, %p29;
	.loc	1 53 22                         // triton_fused_softmax.py:53:22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r92, %r130, 12;
	add.s32 	%r94, %r44, %r92;
	shl.b32 	%r95, %r90, 2;
	add.s32 	%r96, %r94, %r95;
	ld.shared.f32 	%f9, [%r96];
	ld.shared.f32 	%f10, [%r96+1024];
	ld.shared.f32 	%f11, [%r96+2048];
	ld.shared.f32 	%f12, [%r96+3072];
	selp.f32 	%f13, %f9, 0fFF800000, %p20;
	selp.f32 	%f14, %f10, 0fFF800000, %p7;
	selp.f32 	%f15, %f11, 0fFF800000, %p8;
	selp.f32 	%f16, %f12, 0fFF800000, %p9;
$L__tmp1:
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f17, %f13, %f14;
	max.f32 	%f18, %f17, %f15;
	max.f32 	%f19, %f18, %f16;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r97, %f19;
	shfl.sync.bfly.b32	%r98, %r97, 16, 31, -1;
	mov.b32 	%f20, %r98;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f21, %f19, %f20;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r99, %f21;
	shfl.sync.bfly.b32	%r100, %r99, 8, 31, -1;
	mov.b32 	%f22, %r100;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f23, %f21, %f22;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r101, %f23;
	shfl.sync.bfly.b32	%r102, %r101, 4, 31, -1;
	mov.b32 	%f24, %r102;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f25, %f23, %f24;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r103, %f25;
	shfl.sync.bfly.b32	%r104, %r103, 2, 31, -1;
	mov.b32 	%f26, %r104;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f27, %f25, %f26;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r105, %f27;
	shfl.sync.bfly.b32	%r106, %r105, 1, 31, -1;
	mov.b32 	%f28, %r106;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f29, %f27, %f28;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r55, %f29;
	// begin inline asm
	@%p14 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p15 ld.shared.b32 %r56, [ %r57 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r56;
	shfl.sync.bfly.b32	%r107, %r56, 4, 31, -1;
	mov.b32 	%f31, %r107;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f32, %f30, %f31;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r108, %f32;
	shfl.sync.bfly.b32	%r109, %r108, 2, 31, -1;
	mov.b32 	%f33, %r109;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f34, %f32, %f33;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r110, %f34;
	shfl.sync.bfly.b32	%r111, %r110, 1, 31, -1;
	mov.b32 	%f35, %r111;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f36, %f34, %f35;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r59, %f36;
	// begin inline asm
	@%p16 st.shared.b32 [ %r57 + 0 ], %r59;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f37, [global_smem+4096];
$L__tmp2:
	.loc	1 55 30                         // triton_fused_softmax.py:55:30
	sub.f32 	%f38, %f13, %f37;
	sub.f32 	%f39, %f14, %f37;
	sub.f32 	%f40, %f15, %f37;
	sub.f32 	%f41, %f16, %f37;
	.loc	1 57 27                         // triton_fused_softmax.py:57:27
	mul.f32 	%f2, %f38, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f39, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f40, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f1, %f3;
	add.f32 	%f43, %f42, %f5;
	add.f32 	%f44, %f43, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f44;
	shfl.sync.bfly.b32	%r113, %r112, 16, 31, -1;
	mov.b32 	%f45, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r114, %f46;
	shfl.sync.bfly.b32	%r115, %r114, 8, 31, -1;
	mov.b32 	%f47, %r115;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f48;
	shfl.sync.bfly.b32	%r117, %r116, 4, 31, -1;
	mov.b32 	%f49, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f50;
	shfl.sync.bfly.b32	%r119, %r118, 2, 31, -1;
	mov.b32 	%f51, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f52;
	shfl.sync.bfly.b32	%r121, %r120, 1, 31, -1;
	mov.b32 	%f53, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f54;
	// begin inline asm
	@%p14 st.shared.b32 [ %r54 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p15 ld.shared.b32 %r62, [ %r57 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r62;
	shfl.sync.bfly.b32	%r122, %r62, 4, 31, -1;
	mov.b32 	%f56, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r123, %f57;
	shfl.sync.bfly.b32	%r124, %r123, 2, 31, -1;
	mov.b32 	%f58, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r125, %f59;
	shfl.sync.bfly.b32	%r126, %r125, 1, 31, -1;
	mov.b32 	%f60, %r126;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f61;
	// begin inline asm
	@%p16 st.shared.b32 [ %r57 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 59 37                         // triton_fused_softmax.py:59:37
	mov.b32 	%r67, %f1;
	ld.shared.u32 	%r68, [global_smem+4096];
	// begin inline asm
	div.full.f32 %r66, %r67, %r68;
	// end inline asm
	mov.b32 	%r70, %f3;
	// begin inline asm
	div.full.f32 %r69, %r70, %r68;
	// end inline asm
	mov.b32 	%r73, %f5;
	// begin inline asm
	div.full.f32 %r72, %r73, %r68;
	// end inline asm
	mov.b32 	%r76, %f7;
	// begin inline asm
	div.full.f32 %r75, %r76, %r68;
	// end inline asm
	.loc	1 61 44                         // triton_fused_softmax.py:61:44
	mul.wide.s32 	%rd19, %r128, 4;
	add.s64 	%rd20, %rd2, %rd19;
	.loc	1 62 45                         // triton_fused_softmax.py:62:45
	shl.b64 	%rd21, %rd1, 2;
	add.s64 	%rd11, %rd20, %rd21;
	add.s64 	%rd12, %rd11, 1024;
	add.s64 	%rd13, %rd11, 2048;
	add.s64 	%rd14, %rd11, 3072;
	.loc	1 63 30                         // triton_fused_softmax.py:63:30
	// begin inline asm
	@%p20 st.global.b32 [ %rd11 + 0 ], { %r66 };
	// end inline asm
	// begin inline asm
	@%p7 st.global.b32 [ %rd12 + 0 ], { %r69 };
	// end inline asm
	// begin inline asm
	@%p8 st.global.b32 [ %rd13 + 0 ], { %r72 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.b32 [ %rd14 + 0 ], { %r75 };
	// end inline asm
	.loc	1 44 57                         // triton_fused_softmax.py:44:57
	add.s32 	%r131, %r131, %r32;
	.loc	1 46 36                         // triton_fused_softmax.py:46:36
	mul.wide.s32 	%rd22, %r129, 4;
	add.s64 	%rd23, %rd3, %rd22;
	.loc	1 50 37                         // triton_fused_softmax.py:50:37
	add.s64 	%rd15, %rd23, %rd21;
	add.s64 	%rd16, %rd15, 1024;
	add.s64 	%rd17, %rd15, 2048;
	add.s64 	%rd18, %rd15, 3072;
	.loc	1 53 22                         // triton_fused_softmax.py:53:22
	selp.b32 	%r127, 4, 0, %p28;
	selp.b32 	%r83, %r127, 0, %p20;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r82 + 0 ], [ %rd15 + 0 ], 0x4, %r83;
	// end inline asm
	selp.b32 	%r85, %r127, 0, %p7;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r84 + 0 ], [ %rd16 + 0 ], 0x4, %r85;
	// end inline asm
	selp.b32 	%r87, %r127, 0, %p8;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r86 + 0 ], [ %rd17 + 0 ], 0x4, %r87;
	// end inline asm
	selp.b32 	%r89, %r127, 0, %p9;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r88 + 0 ], [ %rd18 + 0 ], 0x4, %r89;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 44 57                         // triton_fused_softmax.py:44:57
	add.s32 	%r129, %r129, %r16;
	add.s32 	%r128, %r128, %r18;
	setp.lt.s32 	%p30, %r131, %r29;
	@%p30 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 44 4                          // triton_fused_softmax.py:44:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/workspace/dev/openllm/dev/LeetCUDA/kernels/openai-triton/fused-softmax/triton_fused_softmax.py"
	.file	2 "/root/anaconda3/envs/para-dit/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 119
.b8 111
.b8 114
.b8 107
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 100
.b8 101
.b8 118
.b8 47
.b8 111
.b8 112
.b8 101
.b8 110
.b8 108
.b8 108
.b8 109
.b8 47
.b8 100
.b8 101
.b8 118
.b8 47
.b8 76
.b8 101
.b8 101
.b8 116
.b8 67
.b8 85
.b8 68
.b8 65
.b8 47
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 115
.b8 47
.b8 111
.b8 112
.b8 101
.b8 110
.b8 97
.b8 105
.b8 45
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 47
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 45
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x79:0x11 DW_TAG_subprogram
.b8 115                                 // DW_AT_name
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 121                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 121                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 37                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 121                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 29                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
